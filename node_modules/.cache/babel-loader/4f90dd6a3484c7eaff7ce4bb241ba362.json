{"ast":null,"code":"import _classCallCheck from\"C:/Users/chakrygin/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/chakrygin/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{token,cohort}from\"./utils\";var Api=/*#__PURE__*/function(){function Api(){_classCallCheck(this,Api);this._token=token;this._cohort=cohort;this._url=\"https://mesto.nomoreparties.co/v1/\";}_createClass(Api,[{key:\"_handleResponse\",value:function _handleResponse(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url).concat(this._cohort,\"/users/me\"),{headers:{authorization:this._token,\"content-type\":\"application/json\"}}).then(this._handleResponse);}},{key:\"updateUserInfo\",value:function updateUserInfo(name,about){return fetch(\"\".concat(this._url).concat(this._cohort,\"/users/me\"),{method:\"PATCH\",headers:{authorization:this._token,\"content-type\":\"application/json\"},body:JSON.stringify({name:name,about:about})}).then(this._handleResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url).concat(this._cohort,\"/cards\"),{headers:{authorization:this._token,\"content-type\":\"application/json\"}}).then(this._handleResponse);}},{key:\"addCard\",value:function addCard(name,link){return fetch(\"\".concat(this._url).concat(this._cohort,\"/cards\"),{method:\"POST\",headers:{authorization:this._token,\"content-type\":\"application/json\"},body:JSON.stringify({name:name,link:link})}).then(this._handleResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url).concat(this._cohort,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:this._token,\"content-type\":\"application/json\"}}).then(this._handleResponse);}},{key:\"updateAvatar\",value:function updateAvatar(avatar){return fetch(\"\".concat(this._url).concat(this._cohort,\"/users/me/avatar\"),{method:\"PATCH\",headers:{authorization:this._token,\"content-type\":\"application/json\"},body:JSON.stringify({avatar:avatar})}).then(this._handleResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){return fetch(\"\".concat(this._url).concat(this._cohort,\"/cards/likes/\").concat(cardId),{method:isLiked?\"PUT\":\"DELETE\",headers:{authorization:this._token,\"content-type\":\"application/json\"}}).then(this._handleResponse);}}]);return Api;}();var api=new Api(token,cohort);export default api;","map":{"version":3,"sources":["C:/Users/chakrygin/dev/mesto-react/src/utils/api.js"],"names":["token","cohort","Api","_token","_cohort","_url","res","ok","Promise","reject","status","json","fetch","headers","authorization","then","_handleResponse","name","about","method","body","JSON","stringify","link","cardId","avatar","isLiked","api"],"mappings":"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","sourcesContent":["import { token, cohort } from \"./utils\";\r\n\r\nclass Api {\r\n  constructor() {\r\n    this._token = token;\r\n    this._cohort = cohort;\r\n    this._url = \"https://mesto.nomoreparties.co/v1/\";\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}${this._cohort}/users/me`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  updateUserInfo(name, about) {\r\n    return fetch(`${this._url}${this._cohort}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, about }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}${this._cohort}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addCard(name, link) {\r\n    return fetch(`${this._url}${this._cohort}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, link }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}${this._cohort}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  updateAvatar(avatar) {\r\n    return fetch(`${this._url}${this._cohort}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ avatar }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(`${this._url}${this._cohort}/cards/likes/${cardId}`, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api(token, cohort);\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}