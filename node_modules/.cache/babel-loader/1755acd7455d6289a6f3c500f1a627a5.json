{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chakrygin\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\nimport api from \"../utils/api.js\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport SuccessTooltip from \"./SuccessTooltip\";\nimport ErrorTooltip from \"./ErrorTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = useState(false);\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    link: \"\",\n    name: \"\"\n  });\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({\n    _id: \"\",\n    name: \"\",\n    about: \"\",\n    avatar: \"\"\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userMail, setUserMail] = useState(\"\");\n  const history = useHistory();\n  let jwt = \"\"; // установка данных пользователя и начальные карточки при монтировании\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([userData, initialCards]) => {\n      setUserInfo(userData);\n      setCards(initialCards);\n    }).catch(err => {\n      console.log(`Error ${err}`);\n    });\n  }, []);\n  useEffect(() => {\n    handleCheckToken();\n  }, [history]);\n\n  function handleCheckToken() {\n    jwt = localStorage.getItem(\"jwt\");\n\n    if (jwt) {\n      api.checkToken(jwt).then(res => {\n        if (res) {\n          setUserMail(res.data.email);\n          setUserInfo(res.data);\n          setLoggedIn(true);\n          history.push(\"/\");\n        } else {\n          localStorage.removeItem(\"jwt\");\n        }\n      }).catch(err => {\n        setIsErrorTooltipOpen(true);\n\n        if (err.status === 400) {\n          console.log(`Код ошибки: ${err.status}, Ошибка: Токен не передан или передан не в том формате`);\n        } else if (err.status === 401) {\n          console.log(`Код ошибки: ${err.status}, Ошибка: Переданный токен некорректен`);\n        } else {\n          console.log(`Код ошибки: ${err.status}, Ошибка: ${err.statusText}`);\n        }\n      });\n    }\n  } // установка данных пользователя\n\n\n  function setUserInfo(data) {\n    const {\n      _id,\n      name,\n      about,\n      avatar\n    } = data;\n    setCurrentUser({\n      _id,\n      name,\n      about,\n      avatar\n    });\n  } // открытие popup Аватара\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  } // открытие popup Профиля пользователя\n\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  } // открытие popup Нового места\n\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  } // открытие popup с местом\n\n\n  function handleCardClick(card) {\n    const {\n      link,\n      name\n    } = card;\n    setSelectedCard({\n      link,\n      name\n    });\n  } // обновление данных пользователя\n\n\n  function handleUpdateUser(data) {\n    return api.updateUserInfo(data.name, data.about).then(userData => {\n      setUserInfo(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Error ${err}`);\n    });\n  } // обновление аватара пользователя\n\n\n  function handleUpdateAvatar(avatar) {\n    return api.updateAvatar(avatar).then(userData => {\n      setUserInfo(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Error ${err}`);\n    });\n  } // добавление новой карточки\n\n\n  function handleAddPlaceSubmit(inputValues) {\n    return api.addCard(inputValues.cardName, inputValues.link).then(data => {\n      const newCards = cards.slice();\n      newCards.unshift(data);\n      setCards(newCards);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Error ${err}`);\n    });\n  } // установка-снятие лайка картинки\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Error ${err}`);\n    });\n  } // удаление карточки\n\n\n  function handleCardDelete(cardId) {\n    return api.deleteCard(cardId).then(data => {\n      const currentCards = cards.filter(item => {\n        return item._id !== cardId;\n      });\n      setCards(currentCards);\n      return data;\n    }).catch(err => {\n      console.log(`Error ${err}`);\n    });\n  } // логин сотрудника на сайте\n\n\n  function handleLoginSubmit(mail, password) {\n    return api.authorize(mail, password).then(res => {\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token);\n        setUserMail(mail);\n        setLoggedIn(true);\n        history.push(\"/\");\n      } else {\n        setIsErrorTooltipOpen(true);\n      }\n    }).catch(err => {\n      setIsErrorTooltipOpen(true);\n\n      if (err.status === 400) {\n        console.log(`Код ошибки: ${err.status}, Ошибка: не передано одно из полей`);\n      } else if (err.status === 401) {\n        console.log(`Код ошибки: ${err.status}, Ошибка: пользователь с email не найден`);\n      } else {\n        console.log(`Код ошибки: ${err.status}, Ошибка: ${err.statusText}`);\n      }\n    }); //\n  } // регистрация пользователя на сайте\n\n\n  function handleRegisterSubmit(mail, password) {\n    api.register(mail, password).then(res => {\n      if (res.data) {\n        history.push(\"/signin\");\n        setIsSuccessTooltipOpen(true);\n      } else {\n        setIsErrorTooltipOpen(true);\n      }\n    }).catch(err => {\n      setIsErrorTooltipOpen(true);\n\n      if (err.status === 400) {\n        console.log(`Код ошибки: ${err.status}, Ошибка: не передано одно из полей`);\n      } else {\n        console.log(`Код ошибки: ${err.status}, Ошибка: ${err.statusText}`);\n      }\n    });\n  } // логаут с сайта\n\n\n  function handleLogout() {\n    setLoggedIn(false);\n    setUserMail(\"\");\n    localStorage.removeItem(\"jwt\");\n    history.push(\"/signin\");\n  } // закрывает все popup\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setIsSuccessTooltipOpen(false);\n    setIsErrorTooltipOpen(false);\n    setSelectedCard({\n      link: \"\",\n      name: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        userMail: userMail,\n        onLogoutClick: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          loggedIn: loggedIn,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          onEditAvatarClick: handleEditAvatarClick,\n          onEditProfileClick: handleEditProfileClick,\n          onAddPlaceClick: handleAddPlaceClick,\n          onCardClick: handleCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onSubmitButton: handleRegisterSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onSubmitButton: handleLoginSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SuccessTooltip, {\n        isOpen: isSuccessTooltipOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorTooltip, {\n        isOpen: isErrorTooltipOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"7DZwBB+iUzoMBI8IkqaSP1AMYrI=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/chakrygin/dev/mesto-react/src/components/App.js"],"names":["Route","Switch","Redirect","useHistory","useState","useEffect","CurrentUserContext","api","Header","Main","Footer","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ImagePopup","ProtectedRoute","Login","Register","SuccessTooltip","ErrorTooltip","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isSuccessTooltipOpen","setIsSuccessTooltipOpen","isErrorTooltipOpen","setIsErrorTooltipOpen","selectedCard","setSelectedCard","link","name","cards","setCards","currentUser","setCurrentUser","_id","about","avatar","loggedIn","setLoggedIn","userMail","setUserMail","history","jwt","Promise","all","getUserInfo","getInitialCards","then","userData","initialCards","setUserInfo","catch","err","console","log","handleCheckToken","localStorage","getItem","checkToken","res","data","email","push","removeItem","status","statusText","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","updateUserInfo","closeAllPopups","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","inputValues","addCard","cardName","newCards","slice","unshift","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","newCard","map","c","handleCardDelete","cardId","deleteCard","currentCards","filter","item","handleLoginSubmit","mail","password","authorize","token","setItem","handleRegisterSubmit","register","handleLogout"],"mappings":"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","sourcesContent":["import { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\r\nimport api from \"../utils/api.js\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport SuccessTooltip from \"./SuccessTooltip\";\r\nimport ErrorTooltip from \"./ErrorTooltip\";\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isSuccessTooltipOpen, setIsSuccessTooltipOpen] = useState(false);\r\n  const [isErrorTooltipOpen, setIsErrorTooltipOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({ link: \"\", name: \"\" });\r\n  const [cards, setCards] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({\r\n    _id: \"\",\r\n    name: \"\",\r\n    about: \"\",\r\n    avatar: \"\",\r\n  });\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userMail, setUserMail] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  let jwt = \"\";\r\n\r\n  // установка данных пользователя и начальные карточки при монтировании\r\n  useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([userData, initialCards]) => {\r\n        setUserInfo(userData);\r\n        setCards(initialCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error ${err}`);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleCheckToken();\r\n  }, [history]);\r\n\r\n  function handleCheckToken() {\r\n    jwt = localStorage.getItem(\"jwt\");\r\n\r\n    if (jwt) {\r\n      api\r\n        .checkToken(jwt)\r\n        .then((res) => {\r\n          if (res) {\r\n            setUserMail(res.data.email);\r\n            setUserInfo(res.data);\r\n            setLoggedIn(true);\r\n            history.push(\"/\");\r\n          } else {\r\n            localStorage.removeItem(\"jwt\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setIsErrorTooltipOpen(true);\r\n          if (err.status === 400) {\r\n            console.log(\r\n              `Код ошибки: ${err.status}, Ошибка: Токен не передан или передан не в том формате`\r\n            );\r\n          } else if (err.status === 401) {\r\n            console.log(\r\n              `Код ошибки: ${err.status}, Ошибка: Переданный токен некорректен`\r\n            );\r\n          } else {\r\n            console.log(`Код ошибки: ${err.status}, Ошибка: ${err.statusText}`);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  // установка данных пользователя\r\n  function setUserInfo(data) {\r\n    const { _id, name, about, avatar } = data;\r\n    setCurrentUser({ _id, name, about, avatar });\r\n  }\r\n\r\n  // открытие popup Аватара\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  // открытие popup Профиля пользователя\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  // открытие popup Нового места\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n  // открытие popup с местом\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ link, name });\r\n  }\r\n\r\n  // обновление данных пользователя\r\n  function handleUpdateUser(data) {\r\n    return api\r\n      .updateUserInfo(data.name, data.about)\r\n      .then((userData) => {\r\n        setUserInfo(userData);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error ${err}`);\r\n      });\r\n  }\r\n\r\n  // обновление аватара пользователя\r\n  function handleUpdateAvatar(avatar) {\r\n    return api\r\n      .updateAvatar(avatar)\r\n      .then((userData) => {\r\n        setUserInfo(userData);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error ${err}`);\r\n      });\r\n  }\r\n\r\n  // добавление новой карточки\r\n  function handleAddPlaceSubmit(inputValues) {\r\n    return api\r\n      .addCard(inputValues.cardName, inputValues.link)\r\n      .then((data) => {\r\n        const newCards = cards.slice();\r\n        newCards.unshift(data);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error ${err}`);\r\n      });\r\n  }\r\n\r\n  // установка-снятие лайка картинки\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i === currentUser._id);\r\n\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error ${err}`);\r\n      });\r\n  }\r\n\r\n  // удаление карточки\r\n  function handleCardDelete(cardId) {\r\n    return api\r\n      .deleteCard(cardId)\r\n      .then((data) => {\r\n        const currentCards = cards.filter((item) => {\r\n          return item._id !== cardId;\r\n        });\r\n        setCards(currentCards);\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error ${err}`);\r\n      });\r\n  }\r\n\r\n  // логин сотрудника на сайте\r\n  function handleLoginSubmit(mail, password) {\r\n    return api\r\n      .authorize(mail, password)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem(\"jwt\", res.token);\r\n          setUserMail(mail);\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        } else {\r\n          setIsErrorTooltipOpen(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsErrorTooltipOpen(true);\r\n        if (err.status === 400) {\r\n          console.log(\r\n            `Код ошибки: ${err.status}, Ошибка: не передано одно из полей`\r\n          );\r\n        } else if (err.status === 401) {\r\n          console.log(\r\n            `Код ошибки: ${err.status}, Ошибка: пользователь с email не найден`\r\n          );\r\n        } else {\r\n          console.log(`Код ошибки: ${err.status}, Ошибка: ${err.statusText}`);\r\n        }\r\n      });\r\n    //\r\n  }\r\n\r\n  // регистрация пользователя на сайте\r\n  function handleRegisterSubmit(mail, password) {\r\n    api\r\n      .register(mail, password)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          history.push(\"/signin\");\r\n          setIsSuccessTooltipOpen(true);\r\n        } else {\r\n          setIsErrorTooltipOpen(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsErrorTooltipOpen(true);\r\n        if (err.status === 400) {\r\n          console.log(\r\n            `Код ошибки: ${err.status}, Ошибка: не передано одно из полей`\r\n          );\r\n        } else {\r\n          console.log(`Код ошибки: ${err.status}, Ошибка: ${err.statusText}`);\r\n        }\r\n      });\r\n  }\r\n\r\n  // логаут с сайта\r\n  function handleLogout() {\r\n    setLoggedIn(false);\r\n    setUserMail(\"\");\r\n    localStorage.removeItem(\"jwt\");\r\n    history.push(\"/signin\");\r\n  }\r\n\r\n  // закрывает все popup\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setIsSuccessTooltipOpen(false);\r\n    setIsErrorTooltipOpen(false);\r\n    setSelectedCard({ link: \"\", name: \"\" });\r\n  }\r\n  return (\r\n    <>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header\r\n          loggedIn={loggedIn}\r\n          userMail={userMail}\r\n          onLogoutClick={handleLogout}\r\n        />\r\n        <Switch>\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/\"\r\n            component={Main}\r\n            loggedIn={loggedIn}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n            onEditAvatarClick={handleEditAvatarClick}\r\n            onEditProfileClick={handleEditProfileClick}\r\n            onAddPlaceClick={handleAddPlaceClick}\r\n            onCardClick={handleCardClick}\r\n          />\r\n          <Footer />\r\n\r\n          <Route path=\"/signup\">\r\n            <Register onSubmitButton={handleRegisterSubmit} />\r\n          </Route>\r\n\r\n          <Route path=\"/signin\">\r\n            <Login onSubmitButton={handleLoginSubmit} />\r\n          </Route>\r\n          <Route>\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\r\n          </Route>\r\n        </Switch>\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n        <SuccessTooltip\r\n          isOpen={isSuccessTooltipOpen}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <ErrorTooltip isOpen={isErrorTooltipOpen} onClose={closeAllPopups} />\r\n      </CurrentUserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}