{"version":3,"sources":["images/logo-header.svg","components/Header.js","utils/utils.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","src","logo","alt","token","cohort","api","this","_token","_cohort","_url","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_handleResponse","name","about","method","body","JSON","stringify","link","cardId","avatar","Card","props","card","onClick","onCardClick","type","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","userData","initialCards","setUserData","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","map","item","_id","Footer","currentYear","Date","getFullYear","PopupWithForm","isOpen","action","noValidate","title","children","buttonText","onClose","EditPofilePopup","id","placeholder","minLength","maxLength","required","AddPlacePopup","EditAvatarPopup","ImagePopup","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","EditProfilePopup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ede5fc11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-header.c2821b38.svg\";","import logo from \"../images/logo-header.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a\r\n        href=\"https://chakrygin-maxim.github.io/mesto/\"\r\n        className=\"header__link\"\r\n      >\r\n        <img src={logo} alt=\"Основное лого Mesto\" className=\"header__logo\" />\r\n      </a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const token = \"8a14ceb3-7392-4a44-a6bb-8080b9aa5657\";\r\nexport const cohort = \"cohort-17\";\r\n","import { token, cohort } from \"./utils\";\r\n\r\nclass Api {\r\n  constructor() {\r\n    this._token = token;\r\n    this._cohort = cohort;\r\n    this._url = \"https://mesto.nomoreparties.co/v1/\";\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}${this._cohort}/users/me`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  updateUserInfo(name, about) {\r\n    return fetch(`${this._url}${this._cohort}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, about }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}${this._cohort}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addCard(name, link) {\r\n    return fetch(`${this._url}${this._cohort}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, link }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}${this._cohort}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  setLike(cardId) {\r\n    return fetch(`${this._url}${this._cohort}/cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  removeLike(cardId) {\r\n    return fetch(`${this._url}${this._cohort}/cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  updateAvatar(avatar) {\r\n    return fetch(`${this._url}${this._cohort}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ avatar }),\r\n    }).then(this._handleResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api(token, cohort);\r\nexport default api;\r\n","function Card(props) {\r\n  function handleCardClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  return (\r\n    <article className=\"element\">\r\n      <img\r\n        className=\"element__photo\"\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        onClick={handleCardClick}\r\n      />\r\n      <button className=\"element__button-trash\"></button>\r\n      <div className=\"element__info\">\r\n        <h2 className=\"element__info-name\">{props.card.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button className=\"element__button-like\" type=\"button\"></button>\r\n          <p className=\"element__likes\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useState, useEffect } from \"react\";\r\nimport api from \"../utils/api.js\";\r\nimport Card from \"./Card.js\";\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = useState(\"Жак-Ив Кусто\");\r\n  const [userDescription, setUserDescription] = useState(\r\n    \"Исследователь океана\"\r\n  );\r\n  const [userAvatar, setUserAvatar] = useState(\"\");\r\n  const [cards, setCards] = useState([]);\r\n\r\n  function setUserData(userData) {\r\n    setUserName(userData.name);\r\n    setUserDescription(userData.about);\r\n    setUserAvatar(userData.avatar);\r\n  }\r\n\r\n  function setInitialCards(inititialCards) {\r\n    setCards(inititialCards);\r\n  }\r\n\r\n  useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(\r\n      ([userData, initialCards]) => {\r\n        setUserData(userData);\r\n        setInitialCards(initialCards);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* Рендер профиля пользователя */}\r\n      <section className=\"profile\">\r\n        <div className=\"profile__main-container\">\r\n          <div\r\n            className=\"profile__image-container\"\r\n            onClick={props.onEditAvatarClick}\r\n          >\r\n            <img src={userAvatar} alt=\"Аватар\" className=\"profile__image\" />\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-container\">\r\n              <h1 className=\"profile__name\">{userName}</h1>\r\n              <button\r\n                className=\"profile__button-edit\"\r\n                type=\"button\"\r\n                onClick={props.onEditProfileClick}\r\n              ></button>\r\n            </div>\r\n            <p className=\"profile__job\">{userDescription}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"profile__button-add\"\r\n          type=\"button\"\r\n          onClick={props.onAddPlaceClick}\r\n        ></button>\r\n      </section>\r\n\r\n      {/* Рендер карточек */}\r\n      <main className=\"elements\">\r\n        {cards.map((item) => (\r\n          <Card\r\n            key={item._id}\r\n            card={item}\r\n            onCardClick={props.onCardClick}\r\n          ></Card>\r\n        ))}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">&copy; {currentYear} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","function PopupWithForm(props) {\r\n  return (\r\n    <section\r\n      className={`popup popup_form_${props.name} ${\r\n        props.isOpen && \"popup_opened\"\r\n      }`}\r\n    >\r\n      <form\r\n        className=\"popup__form\"\r\n        action={`popup-${props.name}-submit`}\r\n        name={props.name}\r\n        noValidate\r\n      >\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        {props.children}\r\n        <button type=\"submit\" className=\"popup__button\">\r\n          {props.buttonText}\r\n        </button>\r\n        <button\r\n          className=\"popup__button-close\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditPofilePopup(props) {\r\n  return (\r\n    <PopupWithForm\r\n      name={props.name}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      title={props.title}\r\n      buttonText={props.buttonText}\r\n    >\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_field_name\"\r\n        id=\"name-input\"\r\n        placeholder=\"Имя\"\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"name-input-error\"></span>\r\n      <input\r\n        name=\"job\"\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_field_job\"\r\n        id=\"job-input\"\r\n        placeholder=\"О себе\"\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"job-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditPofilePopup;\r\n","import PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  return (\r\n    <PopupWithForm\r\n      name=\"mesto\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      title={props.title}\r\n      buttonText={props.buttonText}\r\n    >\r\n      <input\r\n        name=\"cardName\"\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_field_cardName\"\r\n        id=\"cardName-input\"\r\n        placeholder=\"Название\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"cardName-input-error\"></span>\r\n      <input\r\n        name=\"link\"\r\n        type=\"url\"\r\n        className=\"popup__input popup__input_field_link\"\r\n        id=\"link-input\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"link-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  return (\r\n    <PopupWithForm\r\n      name={props.name}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      title={props.title}\r\n      buttonText={props.buttonText}\r\n    >\r\n      <input\r\n        name=\"avatarLink\"\r\n        type=\"url\"\r\n        className=\"popup__input popup__input_field_avatarLink\"\r\n        id=\"avatarLink-input\"\r\n        placeholder=\"Ссылка на аватар\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"avatarLink-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditAvatarPopup;\r\n","function ImagePopup(props) {\r\n  return (\r\n    <section\r\n      className={`popup popup_form_photo ${props.card.link && \"popup_opened\"}`}\r\n    >\r\n      <figure className=\"popup__image-container\">\r\n        <img\r\n          src={props.card.link}\r\n          alt={props.card.name}\r\n          className=\"popup__image\"\r\n        />\r\n        <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\r\n        <button\r\n          className=\"popup__button-close\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </figure>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport ImagePopup from \"./ImagePopup\";\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({ link: \"\", name: \"\" });\r\n\r\n  // открытие popup Аватара\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  // открытие popup Профиля пользователя\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  // открытие popup Нового места\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n  // открытие popup с местом\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ link, name });\r\n  }\r\n\r\n  // закрывает все popup\r\n  function closeAllPopups() {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({ link: \"\", name: \"\" });\r\n  }\r\n\r\n  return (\r\n    <body className=\"page\">\r\n      <Header />\r\n      <Main\r\n        onEditAvatarClick={handleEditAvatarClick}\r\n        onEditProfileClick={handleEditProfileClick}\r\n        onAddPlaceClick={handleAddPlaceClick}\r\n        onCardClick={handleCardClick}\r\n      />\r\n      <Footer />\r\n      <EditProfilePopup\r\n        name=\"profile\"\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n        title=\"Редактировать профиль\"\r\n        buttonText=\"Сохранить\"\r\n      />\r\n      <AddPlacePopup\r\n        name=\"mesto\"\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n        title=\"Новое место\"\r\n        buttonText=\"Создать\"\r\n      />\r\n      <EditAvatarPopup\r\n        name=\"avatar\"\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        title=\"Обновить аватар\"\r\n        buttonText=\"Сохранить\"\r\n      />\r\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}