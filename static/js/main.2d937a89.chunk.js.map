{"version":3,"sources":["context/CurrentUserContext.js","utils/utils.js","utils/api.js","images/logo-header.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","token","cohort","api","this","_token","_cohort","_url","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_handleResponse","name","about","method","body","JSON","stringify","link","cardId","avatar","isLiked","Header","className","href","src","logo","alt","Card","props","currentUser","useContext","isOwn","card","owner","_id","likes","some","i","onClick","onCardClick","onCardDelete","type","onCardLike","length","Main","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","cards","map","item","Footer","currentYear","Date","getFullYear","PopupWithForm","handleClose","event","key","onClose","useEffect","document","addEventListener","removeEventListener","isOpen","action","onSubmit","noValidate","title","children","buttonText","EditPofilePopup","useState","setName","description","setDescription","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","onChange","target","value","defaultValue","required","AddPlacePopup","cardNameRef","useRef","linkRef","inputValues","current","onAddPlace","ref","EditAvatarPopup","avatarRef","onUpdateAvatar","ImagePopup","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","setCards","setCurrentUser","setUserInfo","data","closeAllPopups","all","getUserInfo","getInitialCards","userData","initialCards","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","currentCards","filter","EditProfilePopup","updateUserInfo","addCard","cardName","slice","unshift","Avatar","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d937a89.chunk.js","sourcesContent":["import React from \"react\";\r\nexport const CurrentUserContext = React.createContext();\r\n","export const token = \"8a14ceb3-7392-4a44-a6bb-8080b9aa5657\";\r\nexport const cohort = \"cohort-17\";\r\n","import { token, cohort } from \"./utils\";\r\n\r\nclass Api {\r\n  constructor() {\r\n    this._token = token;\r\n    this._cohort = cohort;\r\n    this._url = \"https://mesto.nomoreparties.co/v1/\";\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}${this._cohort}/users/me`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  updateUserInfo(name, about) {\r\n    return fetch(`${this._url}${this._cohort}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, about }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}${this._cohort}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addCard(name, link) {\r\n    return fetch(`${this._url}${this._cohort}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, link }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}${this._cohort}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  updateAvatar(avatar) {\r\n    return fetch(`${this._url}${this._cohort}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ avatar }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(`${this._url}${this._cohort}/cards/likes/${cardId}`, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api(token, cohort);\r\nexport default api;\r\n","export default __webpack_public_path__ + \"static/media/logo-header.c2821b38.svg\";","import logo from \"../images/logo-header.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a\r\n        href=\"https://chakrygin-maxim.github.io/mesto/\"\r\n        className=\"header__link\"\r\n      >\r\n        <img src={logo} alt=\"Основное лого Mesto\" className=\"header__logo\" />\r\n      </a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  function handleCardClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleCardDelete() {\r\n    props.onCardDelete(props.card._id);\r\n  }\r\n\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  return (\r\n    <article className=\"element\">\r\n      <img\r\n        className=\"element__photo\"\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        onClick={handleCardClick}\r\n      />\r\n      <button\r\n        className={`element__button-trash ${isOwn && \"button-trash_visible\"}`}\r\n        onClick={handleCardDelete}\r\n      ></button>\r\n      <div className=\"element__info\">\r\n        <h2 className=\"element__info-name\">{props.card.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button\r\n            className={`element__button-like ${\r\n              isLiked && \"element__button-like_status_liked\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <p className=\"element__likes\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useContext } from \"react\";\r\nimport Card from \"./Card.js\";\r\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n      {/* Рендер профиля пользователя */}\r\n      <section className=\"profile\">\r\n        <div className=\"profile__main-container\">\r\n          <div\r\n            className=\"profile__image-container\"\r\n            onClick={props.onEditAvatarClick}\r\n          >\r\n            <img\r\n              src={currentUser.avatar}\r\n              alt=\"Аватар\"\r\n              className=\"profile__image\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-container\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button\r\n                className=\"profile__button-edit\"\r\n                type=\"button\"\r\n                onClick={props.onEditProfileClick}\r\n              ></button>\r\n            </div>\r\n            <p className=\"profile__job\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"profile__button-add\"\r\n          type=\"button\"\r\n          onClick={props.onAddPlaceClick}\r\n        ></button>\r\n      </section>\r\n\r\n      {/* Рендер карточек */}\r\n      <main className=\"elements\">\r\n        {props.cards.map((item) => (\r\n          <Card\r\n            key={item._id}\r\n            card={item}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          ></Card>\r\n        ))}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">&copy; {currentYear} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  function handleClose(event) {\r\n    if (event.key === \"Escape\") {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleClose);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleClose);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section\r\n      className={`popup popup_form_${props.name} ${\r\n        props.isOpen && \"popup_opened\"\r\n      }`}\r\n    >\r\n      <form\r\n        className=\"popup__form\"\r\n        action={`popup-${props.name}-submit`}\r\n        name={props.name}\r\n        onSubmit={props.onSubmit}\r\n        noValidate\r\n      >\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        {props.children}\r\n        <button type=\"submit\" className=\"popup__button\">\r\n          {props.buttonText}\r\n        </button>\r\n        <button\r\n          className=\"popup__button-close\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditPofilePopup(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  function handleInputNameOnChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  function handleInputAboutOnChange(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"profile\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      title=\"Редактировать профиль\"\r\n      buttonText=\"Сохранить\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_field_name\"\r\n        id=\"name-input\"\r\n        placeholder=\"Имя\"\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        onChange={handleInputNameOnChange}\r\n        defaultValue={name}\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"name-input-error\"></span>\r\n      <input\r\n        name=\"about\"\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_field_job\"\r\n        id=\"job-input\"\r\n        placeholder=\"О себе\"\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        onChange={handleInputAboutOnChange}\r\n        defaultValue={description}\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"job-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditPofilePopup;\r\n","import { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const cardNameRef = useRef();\r\n  const linkRef = useRef();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const inputValues = {\r\n      [cardNameRef.current.name]: cardNameRef.current.value,\r\n      [linkRef.current.name]: linkRef.current.value,\r\n    };\r\n\r\n    props.onAddPlace(inputValues);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"mesto\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      title=\"Новое место\"\r\n      buttonText=\"Создать\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        name=\"cardName\"\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_field_cardName\"\r\n        id=\"cardName-input\"\r\n        placeholder=\"Название\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        ref={cardNameRef}\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"cardName-input-error\"></span>\r\n      <input\r\n        name=\"link\"\r\n        type=\"url\"\r\n        className=\"popup__input popup__input_field_link\"\r\n        id=\"link-input\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        ref={linkRef}\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"link-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = useRef();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onUpdateAvatar(avatarRef.current.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      title=\"Обновить аватар\"\r\n      buttonText=\"Сохранить\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        name=\"avatarLink\"\r\n        type=\"url\"\r\n        className=\"popup__input popup__input_field_avatarLink\"\r\n        id=\"avatarLink-input\"\r\n        placeholder=\"Ссылка на аватар\"\r\n        ref={avatarRef}\r\n        required\r\n      />\r\n      <span className=\"popup__input-error\" id=\"avatarLink-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditAvatarPopup;\r\n","function ImagePopup(props) {\r\n  return (\r\n    <section\r\n      className={`popup popup_form_photo ${props.card.link && \"popup_opened\"}`}\r\n    >\r\n      <figure className=\"popup__image-container\">\r\n        <img\r\n          src={props.card.link}\r\n          alt={props.card.name}\r\n          className=\"popup__image\"\r\n        />\r\n        <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\r\n        <button\r\n          className=\"popup__button-close\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </figure>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import { useState, useEffect } from \"react\";\r\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\r\n\r\nimport api from \"../utils/api.js\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport ImagePopup from \"./ImagePopup\";\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({ link: \"\", name: \"\" });\r\n  const [cards, setCards] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({\r\n    _id: \"\",\r\n    name: \"\",\r\n    about: \"\",\r\n    avatar: \"\",\r\n  });\r\n\r\n  // установка данных пользователя и начальные карточки при монтировании\r\n  useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(\r\n      ([userData, initialCards]) => {\r\n        setUserInfo(userData);\r\n        setCards(initialCards);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  // установка данных пользователя\r\n  function setUserInfo(data) {\r\n    const { _id, name, about, avatar } = data;\r\n    setCurrentUser({ _id, name, about, avatar });\r\n  }\r\n\r\n  // открытие popup Аватара\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  // открытие popup Профиля пользователя\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  // открытие popup Нового места\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n  // открытие popup с местом\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ link, name });\r\n  }\r\n\r\n  // обновление данных пользователя\r\n  function handleUpdateUser(data) {\r\n    return api.updateUserInfo(data.name, data.about).then((userData) => {\r\n      setUserInfo(userData);\r\n      closeAllPopups();\r\n    });\r\n  }\r\n\r\n  // обновление аватара пользователя\r\n  function handleUpdateAvatar(Avatar) {\r\n    return api.updateAvatar(Avatar).then((userData) => {\r\n      setUserInfo(userData);\r\n      closeAllPopups();\r\n    });\r\n  }\r\n\r\n  // добавление новой карточки\r\n  function handleAddPlaceSubmit(inputValues) {\r\n    return api.addCard(inputValues.cardName, inputValues.link).then((data) => {\r\n      const newCards = cards.slice();\r\n      newCards.unshift(data);\r\n      setCards(newCards);\r\n      closeAllPopups();\r\n    });\r\n  }\r\n\r\n  // установка-снятие лайка картинки\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n      setCards(newCards);\r\n    });\r\n  }\r\n\r\n  // удаление карточки\r\n  function handleCardDelete(cardId) {\r\n    return api.deleteCard(cardId).then((data) => {\r\n      const currentCards = cards.filter((item) => {\r\n        return item._id !== cardId;\r\n      });\r\n      setCards(currentCards);\r\n      return data;\r\n    });\r\n  }\r\n\r\n  // закрывает все popup\r\n  function closeAllPopups() {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({ link: \"\", name: \"\" });\r\n  }\r\n\r\n  return (\r\n    <body className=\"page\">\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n        <Main\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n          onEditAvatarClick={handleEditAvatarClick}\r\n          onEditProfileClick={handleEditProfileClick}\r\n          onAddPlaceClick={handleAddPlaceClick}\r\n          onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n      </CurrentUserContext.Provider>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}